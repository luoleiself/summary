/* 
if语句定义格式：
if（判断条件）
{   
	语句主体1；
} 
else 
{   
	语句主体2；
} 

switch语句定义格式：
switch（表达式）
{  
	case 选择值1：
		语句主体1；             
		break； 
	case 选择值2：
		语句主体2；				
		break； 
		……   
	case 选择值n：
		语句主体n；                 
		break；  
	default: 
		语句主体;
		break;
}

while语句定义格式：
while（判断条件）
{   
	语句1；  
	语句2；
	……  
	语句n；
} 

do while语句定义格式：
do 
{   
	语句1；  
	语句2； 
	……   
	语句n； 
}
while（判断条件）;

for语句定义格式：
for (初始化语句; 条件语句; 控制语句) 
{ 
语句1 ; 
语句2 ; 
.... 

语句n ; 
} 
*/
/*
课后练习一：求1-1000中的3的倍数的和，同时求3的倍数的个数，练习for和while用不同方法求解。
课后练习二：使用嵌套循环语句做练习，输出长方形星型矩阵，或者依次递增或者递减矩阵，数字。
思路：
1,求1-1000中的3的倍数的个数需要用到累加思想和计数器思想，也就是需要用到循环体语句;
2,首先使用for循环语句定义一个循环体，如果计算3的倍数需要用到if语句进行判断能被3整除的数;
3,计算3的倍数的个数同时需要用到一个变量进行统计。
*/
class  Test1
{ 
	public static void main(String[] args)
	{	
		/*
		  课后练习一：
		  使用for循环以后计算1000以内3的倍数的和，并统计个数;
		  方法一：
		*/
		int count=0,sum=0;
		for(int a=1;a<=1000;a++)
		{
			if(a%3==0)//a和3取模等于0证明能被3整除;
			{
				count++;
				sum=sum+a;
			}
		}
		System.out.println("用for语句求1000以内3的倍数的和为："+sum);
		System.out.println("用for语句求1000以内3的倍数的个数为："+count);
		System.out.println("--------------------------------------");
		
		//当然使用while语句也可以实现以上功能，定义三个变量分别存储结果的和，个数，自增量。
		//方法二：
		int count1=0,sum1=0,b=1;
		while(b<=1000)
		{
			if (b%3==0)//a和3取模等于0证明能被3整除;
			{
				sum1=sum1+b;
				count1++;
			}
			b++;//注意控制循环条件的变量的位置;
		}
		System.out.println("用while语句求1000以内3的倍数的和为："+sum1);
		System.out.println("用while语句求1000以内3的倍数的个数为："+count1);
		System.out.println("--------------------------------------");

		/*
		当然使用do while 语句也可以实现以上功能,
		总结：
		for语句和while语句的区别：
		1,变量的作用域不同，for循环语句中定义的变量只在循环体中有效，循环结束后，内存将会释放变量。
		2,for语句和while语句可以进行互换，如果需要定义暂时性的循环变量，使用for语句更合适。
		*/

		//课后练习二：输出长方形星型矩阵，或者依次递增或者递减矩阵，数字;
		for (int a1=0;a1<6;a1++)//外循环控制程序输出的行数;
		{
			for (int b1=0;b1<6;b1++)//内循环控制程序输出的每一行的打印的内容的个数;
			{
				System.out.print("*");//一定注意：此处没有使用转义字符进行换行;
			}
			System.out.println();
		}
		System.out.println("---------------------------------------");

		//输出依次递增矩阵，数字;
		for (int a2=1;a2<=6;a2++)
		{
			for (int b2=1;b2<=a2;b2++)
			{
				System.out.print("*");//一定注意：此处没有使用转义字符进行换行;
			}
			System.out.println();
		}
		System.out.println("--------------------------------------");

		//输出依次递减矩阵，数字;
		for (int a2=1;a2<=6;a2++)
		{
			for (int b2=a2;b2<=6;b2++)//也可以使用for (int b2=6;b2>=a2;b2--);
			{
				System.out.print("*");//一定注意：此处没有使用转义字符进行换行;
			}
			System.out.println();
		}
		System.out.println("--------------------------------------");

		/*
		不是规律的规律：都是改变内循环;
		尖朝上，改变条件，让条件随着外循环变化;

		尖朝下，改变初始化值，让初始化值随着外循环变化;
		*/
	}
}
