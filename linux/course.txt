系统目录：
	1. / 系统根目录
	2. /dev 设备目录
	3. /etc 系统配置目录
	4. /home 普通用户家目录
	5. /proc  系统运行时的基本信息，存储在内存中
	6. /opt 安装软件时额外的依赖软件位置
文件操作：
	touch {n..m}.ext # 批量创建多个文件,文件名从n到m
	dd -if=file -of=file bs=N seek=N skip=N # 创建大文件, bs 写入的数据块大小，skip 跳过的数据块大小 seek 输出的数据块大小

	sort -u -k --sort= # 对输出结果排序
		-k 排序关键字
		--sort 排序方式 
		-u 去重

	du -c file # 统计文件大小 -c 显示总量

	last/lastb # 查看最后一次登陆系统成功/失败的用户

	find 选项 目录 -name -size -type -exec -mtime -ctime -atime 模式 
		-mtime +/-10 # 修改时间 + 以前 - 以内 
		-ctime +/-10 # 创建时间 + 以前 - 以内
		-atime +/-10 # 访问时间 + 以前 - 以内 
		-amin +/-3 # 过去n分钟内读取过 + 以前 - 以内
		-cmin +/-3 # 过去n分钟内修改过 + 以前 - 以内
		-name # 按名称查找
		-type b/d/c/p/l/f # 文件类型
		-size +/-3M # 查找大于/小于3M的文件
		-prune 忽略目录
		-perm 2664 查找具有644权限和SGID属性的文件
		-regex 按正则表达式查询
		-exec 执行shell命令
		-a # 逻辑与
		-o # 逻辑或
		-not # 逻辑非
		find /etc/	-name '*.conf' -exec sudo cp {} /temp/test/\; # 查找文件并复制到指定目录，{} 表示上一个命令的执行结果
        sudo find ~/ -size 0 -exec rm {} \; # 删除家目录中的inode文件

	grep -A -B -C -e -E -n -o -i -v -l -L -n -r -c  模式 文件 # 
		-A 显示匹配结果的后两行
		-B 显示匹配结果的前两行
		-C 显示匹配结果的上下几行
		-e 使用正则表达式匹配，可使用多个
		-E 使用扩展的正则表达式语法，高级版
		-l --files-with-matches 显示匹配的文件名
		-L --files-without-match 显示未匹配到的文件名
		-n --line-number 显示匹配到的行号
		-o --only-matching 仅显示匹配的行
		-r --recursive 递归
		-c --count  统计匹配到的行数

	sed -i 文件 # -i 直接修改原文件

	awk [options] ['[[pattern][{action...}]...]'] 文件 # 处理文本
		参数
			-F 设置 FS 内置变量, 支持正则表达式, 
				echo 'width:250 height:200'| awk -F '[ :]+' '{print $2, $4}' # 250 200
			-v OFS="---" 设置变量
		内置变量
			$0 表示当前整行内容
			$1-$n 表示当前行第几个字段, $(NF - n) 动态计算第几个字段
			FS 字段分割符(默认空格), 可以使用 -F 参数设置
			OFS 输出字段分割符(默认空格)
			RS 记录分割符(默认换行符)
			ORS 输出记录分割符(默认换行符)
			NF 当前行的字段个数
			NR 当前处理的第几行(默认从1开始)
			FNR 各文件分别计数的行号
			OFMT 输出数字格式(默认%.6g)
			ARGC 命令行参数的个数
			ARGV 命令行参数组成的数组
			FILENAME 文件名称
			PROCINFO 数组, 存储当前系统运行时信息, PROCINFO['uid']
			ENVIRON 数组, 存储当前系统的环境变量, ENVIRON['PATH']
			使用未定义的或者(空)字符串进行数值运算时,会自动转为数值0
		内置方法
			length() 字符创长度,
				awk -F ':' -v OFS="---" '{print $1, length($1)}' /etc/passwd # 按:分割passwd文件取第一个字段并统计第一个字段的长度按输出分割---输出
			tolower() 转换小写
			toupper() 转换大写
			substr() 截取
			index(r, s) 获取指定字符串s在整个字符串r中的位置
			sub(r, s, t) 替换s指定范围t内匹配的内容r一次(t可省略,默认$0)
			gsub(r, s, t) 替换s指定范围t内所有匹配的内容r(t可省略,默认$0)
			split(s, t, sep) 按分割符sep分割字符串s,结果存入到t中
			assort() 排序
			sqrt() 平方根
			rand() 随机数
			srand() 随机数调用之前调用
		模式(BEGIN/END模式,空模式,关系运算模式,正则模式,行范围模式)
			BEGIN 在开始遍历之前执行，只执行一次
			END 在遍历结束之后执行, 只执行一次
				awk -F : 'BEGIN{printf "%-20s\t %-20s\t %s\n", "用户名称", "用户ID", "BASH"} {if(index($7, "zsh") != 0){printf "%-30s\t %-20s\t %s\n", $1, $3, $7}} END{print "总计",NR}' /etc/passwd 
					# 查找使用 zsh shell的用户同时输出用户名,用户ID,Bash, 并统计文件总行数
					用户名称                	 用户ID                	 Bash
					luolei                  	 1000  	              	 /usr/bin/zsh
					总计 49
				awk -F : 'BEGIN{printf "%-30s\t %s\n", "Bash", "total"} {count[$7]++} END{for(i in count){printf "%-30s\t %s\n", i, count[i]}}' /etc/passwd
					# 分别统计/etc/passwd文件中使用不同Bash的用户数量
				awk -F : '{type= $3 < 1000 ? "系统用户" : "普通用户"; printf "%-20s\t %s\n", $1, type}' /etc/passwd # 判断/etc/passwd文件的用户类型是系统用户还是普通用户
			'/正则1/,/正则2/ {}' 行范围模式,从正则1第1次匹配开始到正则2第1次匹配结束之间的所有行执行相应的动作
			'$2~/正则/ {}' $2与对应正则匹配则为真, 执行动作, !~ 作用相反
		动作:
			printf 输出默认右对其, - 表示左对其, + 数字加正数符号
				1. 输出的内容不会自动换行,需要手动添加 \n 转义字符
				2. 指定的格式与被格式化的文本之间,需要用逗号分隔,没有逗号分割按字符串拼接处理
				3. 格式中的格式替换符必须与被格式的文本一一对应

	printf 命令
		%s 字符串
		%f 浮点型
		%c ASCII字符
		%d 十进制整数
		%o 不带正负号的八进制数
		%u 不带正负号的十进制数
		%x 不带正负号的十六进制数
		%% 表示%本身

用户:
	usermod -aG groupName1,groupName2... userName # 不加 a 添加用户组时会覆盖之前的附加组
	
	groupdel groupName # 删除分组后,组中用户被自动移除组

	chmod -R 4777 file|dir # 修改文件权限 -R 递归
	
	chown -R u:g file|dir # 修改文件属主和属组 -R 递归

文件和目录权限：
	r: 读取权限
		文件：表示具有读取阅读文件内容的权限, eg: cat
		目录：表示具有浏览目录的权限,(与进入目录的权限不同), eg: ls
	w: 写入权限
		文件：表示具有新增、修改文件内容的权限,(删除和移动文件和文件本身属性无关),
		目录：表示具有删除、一定目录内的权限, eg: rm
	x: 执行权限
		文件：表示具有执行文件的权限, eg: source
		目录：表示具有进入目录的权限, eg: cd
	-: 无任何权限

权限：
	权限优先级: 拥有者 > ACL > 所属组 > 其他

	SUID: 4 -rwsr--r-- 用户临时获得管理员权限 passwd
	SGID: 2 drw-rwsr-- 用户组临时获得管理员权限 /var/local
	SBIT: 1 drwxrwxrwt 其他用户不能操作非自己创建的文件 /tmp
		sudo chmod g+s /opt/testdir/ # 给当前目录添加 sgid 权限, 在目录下创建的文件默认继承目录的所属组

	setfacl -mxbR u|g:名称:权限 file # 设置文件或目录的访问控制列表
		-m 修改
		-x 删除
		-b 删除所有
		-R 递归设置ACL
		u 用户
		g 用户组

	getfacl -aR filename # 获取文件目录访问控制列表

	chattr -R file # 修改文件属性, R 递归修改

	lsattr -Rad file # 查看文件属性，a 显示目录中所有文件，d 显示目录

	visudo # 编辑 /etc/sudoers

磁盘:
	parted	# GPT
	fdisk # MBR

	partprobe /dev/sda1 # partprobe is a program that informs the operating system kernel of partition table changes.
	
	blkid /dev/sda1 # locate/print block device attributes

	df -i # 查看磁盘的 inode 数量，inode 数量与磁盘容量成正比,限制磁盘存储文件的数量

	swapon -a # 启用所有交换分区

	lsblk # 显示磁盘信息

	RAID: 磁盘阵列冗余 

	网络文件系统:
		NFS
		CFS
	存储类型:
		DAS
		NAS
		SAN
			FC SAN
			IP SAN
软件:
    ulimit -n # 显示系统最大可调用的程序数(默认1024)

    strace # 进程追踪

    源码安装nginx,添加第三方模块echo-nginx-module
     sudo apt install libpcre3-dev libssl-dev zlib1g-dev
     sudo mkdir -p /var/tmp/nginx/{client,proxy,fastcgi,uwsgi,scgi}
     sudo ./configure --prefix=/usr/local/nginx --with-http_v2_module --with-http_ssl_module --with-http_flv_module --with-http_stub_status_module --with-http_gzip_static_module --http-client-body-temp-path=/var/tmp/nginx/client/ --http-proxy-temp-path=/var/tmp/nginx/proxy/ --http-fastcgi-temp-path=/var/tmp/nginx/fastcgi/ --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi/ --http-scgi-temp-path=/var/tmp/nginx/scgi/ --with-pcre --with-file-aio --with-http_secure_link_module --with-threads --add-module=/home/luolei/echo-nginx-module-0.61

网络:
    nmcli # command-line tool for controlling NetworkManager
    resolvectl # DNS 操作命令
    netplan # YAML network configuration abstraction for various backends

