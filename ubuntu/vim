模式：
  1. 命令模式
  2. 插入模式
  3. 末行模式
vim常用命令:
  1. 打开文件：
    sudo vi fileName => 打开文件
    vi +n filename => 打开文件，并将光标置于第n行首 
    vi + filename => 打开文件，并将光标置于最后一行首 
    vi +/pattern filename => 打开文件，并将光标置于第一个与 pattern 匹配的串处 
    vi -O filename1 filename2 => 垂直分割窗口打开多个文件 
    vi -o filenaem1 filename2 => 水平分割窗口打开多个文件
    
    vim -p filename => 已创建标签方式打开多个文件
  2. 命令行模式:
    1. 文件操作
      :wq => 保存并退出
      ZZ  => 保存并退出
      :q! => 强制退出并忽略所有更改
      :e! => 放弃所有修改，并打开原来文件
      :read fileName => 读取指定文件
      :n  切换到下一个文件
      :N  切换到上一个文件
      :e  filename => 打开新文件
      :sp  newfile => 将会水平分割窗口
      :vsp  newfile => 将会垂直分割窗口
      :!shell 切换到shell命令执行，此时vim在后台运行, exit => 退出 shell 切换回 vim
      :syntax on => 开启语法高亮
      :set number => 显示行号
      :set tabstop=4 => 设置 Tab 键宽度
      :set expandtab => 使用空格替代 Tab
      :set softtabstop=4 => 设置软件 Tab (自动Tab)宽度为 4
      :set shiftwidth=4 => 设置自动缩进宽度为 4
      :set autoindent => 开启自动缩进，通常用于编写程序
      :set number/nonumber => 临时显示/隐藏行号
      :set hlsearch/nohlsearch => 临时显示/隐藏高亮匹配
    2. 正则表达式
      /string => 正则[向后]匹配内容
      ?string => 正则[向前]匹配内容
      :[range]s/old/new/[flags] => 把old指定的字符串替换成new指定的字符串，old可以是正则表达式
            => [range]: 
              1,$ => 从第一行到最后一行
              %   => 全局匹配
            => [flags]: 
              g => 对指定范围内的所有匹配项进行替换
              c => 再替换前请求用户确认
              e => 忽略执行过程的错误
              d => 删除操作
    3. 标签操作
      :tabs => 列出所有的标签页
      :tabn => 切换到下一个标签, 以 -p 方式打开的多个文件
      :tabp => 切换到上一个标签, 以 -p 方式打开的多个文件
      {n}gt => 切换到第 n 个标签页
      :tabc[lose] => 关闭当前的标签页
      :tabo[nly] => 关闭其他的标签页
      :tabm[ove] n => 移动当前标签页到 n 的位置
      :tab split => 将缓冲区的内容在新标签页中打开
  3. 命令模式：
    1. 插入：
      i => 在当前位置前插入
      a => 在当前位置后插入
      I => 在当前行首插入
      A => 在当前行尾插入
      o => 在当前行之后插入一行
      O => 在当前行之前插入一行
    2. 移动：
      h => 向左移动光标
      j => 向下移动光标
      k => 向上移动光标
      l => 向右移动光标
      w => 向右移动一个字, 光标定位在字的首字符
      e => 向下跳到下一个字尾, 
      b => 向左移动一个字, 光标定位在字的首字符
      B => 向左移动一个字，长跳

      0 => 光标移动到行首，忽略缩进
      ^ => 光标移动到行首，第一个字符跳过缩进
      $ => 光标移动到行尾

      gg => 光标移动到页首, 文本第一行
      G => 光标移动到页尾, 文本最后一行

      {n}gg/G/:n => 跳转到指定行, n 为数字

      ( => 向后移动一个句子，光标定位在句子开始
      ) => 向前移动一个句子，光标定位在句子开始
      { => 向后移动一个段落，光标定位在段落开始
      } => 向前移动一个段落，光标定位在段落开始
      H => 将光标定位到屏幕顶部一行的最左端
      M => 将光标定位到屏幕中间一行
      L => 将光标定位到屏幕的底部一行

      ctrl + f => 向下翻页
      ctrl + b => 向上翻页
      ctrl + d => 向下翻半页
      ctrl + u => 向上翻半页

    3. 删除：
      1. 删除字符
        {n}x => 删除当前字符, n 为个数
        {n}dl => 删除当前字符， dl=x , n 为个数

        s => 删除当前光标所在字符, 并进入插入模式
      2. 删除字:
        {n}dw => 从光标所在位置开始, 删除到字的末尾(包含光标所在位置的字符)，n 为要个数, 
        db => 删除光标所在位置前面的字符(不包含光标所在位置的字符)

        cw => 删除当前光标所在字，并进入插入模式
      3. 删除行:
        D => 删除当前行内容(内容不上移, 清空行)
        C => 删除当前行内容(内容不上移, 清空行), 并进入插入模式

        dd => 删除光标所在行
        {n}dd => 删除从光标开始的 n 行, n 为数字
        cc/S => 删除当前光标所在行，并进入插入模式

        :10, 20d => 删除第10行到20行的内容

        dG => 删除全部
        d0 => 从光标开始, 删除到行首的所有字符(不包含光标所在字符)
        d^ => 删除光标前面知道行首的字符, 不包含行首的空格
        d$ => 删除从光标开始知道行尾的字符, 不包含行尾的空格

        :$d => 删除最后一行
        :1,.-1d => 删除当前行之前的所有行
        :.+1,$d => 删除当前行之后的所有行
        :1,$d => 删除所有行
        
        d( => 从句首删除
        d) => 删除到句尾
        d{ => 从段首删除
        d} => 删除到段尾
    4. 复制行: yank
      yy => 复制光标所在的行
      {n}yy => 复制从光标开始的n行, n 为数字
      y^ => 复制当前到行头的内容
      y$ => 复制当前到行尾的内容
      yw => 复制一个word(nyw或者ynw，复制n个word，n为数字)
      yG => 复制至档尾(nyG或者ynG，复制到第n行，例如1yG或者y1G，复制到档尾)
    5. 粘贴：put
      p(lower) => 如果是v(lower)命令, 则在当前字符的位置后面粘贴, 因为游标是在具体字符的位置上，所以实际是在该字符的后面
      p(lower) => 如果是V(upper)命令, 则在当前行的下一行粘贴行
      P(upper) => 如果是v(lower)命令, 则在当前字符的位置前面粘贴, 因为游标是在具体字符的位置上，所以实际是在该字符的前面(可以看成光标位置)
      P(upper) => 如果是V(upper)命令, 则在当前行的上一行粘贴行

      {n}p => 重复粘贴n次

      命令行：粘贴
        :1,10 co 20 => 将1-10行插入到第20行之后
        :1,10d => 将1-10行剪切,利用p命令可将剪切后的内容进行粘贴
        :1, 10 m 20 => 将第1-10行移动到第20行之后
    6. 选择：
      v(lower) => 进入可视模式，移动光标选择文本块内容;
      V(upper) => 进入可视模式，移动光标选择多行;
    7. 撤销：
      u(lower) => 撤销（Undo）
      U(upper) => 撤销对整行的操作
    8. 反转
      ~ => 反转光标所在字符的大小写, (配合 v 可视模式, 批量转换大小写)
    9. 合并
      {n}J => 合并多行回车换行, n 为数字
  4. 窗口操作
    :split [filename] 水平分割窗口, 并打开文件
    :vsplit [filename] 垂直分割窗口, 并打开文件
    :new [filename] 水平创建新窗口， 并打开指定文件
    :vnew [filename] 垂直创建新窗口, 并打开指定文件
    :close|quit 关闭当前活动窗口
    :only 关闭其他窗口，仅保留当前窗口
    :exit 退出shell
    :!command 执行shell命令
