vim常用命令:
  1. 打开文件：
    sudo vi fileName ->打开文件
    vi +n filename ：打开文件，并将光标置于第n行首 
    vi + filename ：打开文件，并将光标置于最后一行首 
    vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处 
    vi -O filename1 filename2: 垂直分割窗口打开多个文件 
    vi -o filenaem1 filename2: 水平分割窗口打开多个文件 --- ctrl+w w 在各窗口之间进行切换
  2. 命令行模式:
    :wq => 保存并退出
    ZZ  => 保存并退出
    :q! => 强制退出并忽略所有更改
    :e! => 放弃所有修改，并打开原来文件
    :read fileName => 读取指定文件
    :n  切换到下一个文件
    :N  切换到上一个文件
    :e  newfile => 不会分割窗口
    :sp  newfile => 将会水平分割窗口
    :vsp  newfile => 将会垂直分割窗口
    :shell 切换到shell，此时vim在后台运行, exit => 退出 shell 切换回 vim
    :/string => 使用正则匹配内容
    :syntax on => 开启语法高亮
    :set number => 显示行号
    :set tabstop=4 => 设置 Tab 键宽度
    :set expandtab => 使用空格替代 Tab
    :set softtabstop=4 => 设置软件 Tab (自动Tab)宽度为 4
    :set shiftwidth=4 => 设置自动缩进宽度为 4
    :set autoindent => 开启自动缩进，通常用于编写程序
    :set number/nonumber => 临时显示/隐藏行号
    :set hlsearch/nohlsearch => 临时显示/隐藏高亮匹配
    :[range]s/from/to/[flags] => 把from指定的字符串替换成to指定的字符串，from可以是正则表达式
         => [range]: 1,$ => 从第一行到最后一行
         => [flags]: 
            g => 对指定范围内的所有匹配项进行替换
            c => 再替换前请求用户确认
            e => 忽略执行过程的错误
  3. 命令模式：
    1. 插入：
      i(lower) => 在当前位置前插入
      a(lower) => 在当前位置后插入
      I(upper) => 在当前行首插入
      A(upper) => 在当前行尾插入
      o(lower) => 在当前行之后插入一行
      O(upper) => 在当前行之前插入一行
    2. 移动：
      h => 向左移动光标
      j => 向下移动光标
      k => 向上移动光标
      l => 向右移动光标
      w => 向右移动一个字, 光标定位在字的首字符
      b => 向左移动一个字, 光标定位在字的首字符

      ( => 向后移动一个句子，光标定位在句子开始
      ) => 向前移动一个句子，光标定位在句子开始
      { => 向后移动一个段落，光标定位在段落开始
      } => 向前移动一个段落，光标定位在段落开始
      H => 将光标定位到屏幕顶部一行的最左端
      M => 将光标定位到屏幕中间一行
      L => 将光标定位到屏幕的底部一行
    3. 删除单个字符：
      x(lower) => 删除当前字符
      dl(lower) => 删除当前字符， dl=x
    4. 删除字:
      dw => 从光标所在位置开始, 删除到字的末尾(包含光标所在位置的字符)
      db => 删除光标所在位置前面的字符(不包含光标所在位置的字符)
    5. 删除行:
      dd => 删除光标所在行
      {num}dd => 删除从光标开始的{num}行
      D => 从光标开始, 删除到行尾的所有字符(包含光标所在的字符)
      d0 => 从光标开始, 删除到行首的所有字符(不包含光标所在字符)
      d^ => 删除光标前面知道行首的字符, 不包含行首的空格
      d$ => 删除从光标开始知道行尾的字符, 不包含行尾的空格
      d( => 从句首删除
      d) => 删除到句尾
      d{ => 从段首删除
      d} => 删除到段尾
      :1,$d => 删除所有行
    6. 复制行: yank
      yy => 复制光标所在的行
      {num}yy => 复制从光标开始的{num}行
      y^ => 复制当前到行头的内容
      y$ => 复制当前到行尾的内容
      yw => 复制一个word(nyw或者ynw，复制n个word，n为数字)
      yG => 复制至档尾(nyG或者ynG，复制到第n行，例如1yG或者y1G，复制到档尾)
    7. 粘贴：put
      p(lower) => 如果是v(lower)命令, 则在当前字符的位置后面粘贴, 因为游标是在具体字符的位置上，所以实际是在该字符的后面
      p(lower) => 如果是V(upper)命令, 则在当前行的下一行粘贴行
      P(upper) => 如果是v(lower)命令, 则在当前字符的位置前面粘贴, 因为游标是在具体字符的位置上，所以实际是在该字符的前面(可以看成光标位置)
      P(upper) => 如果是V(upper)命令, 则在当前行的上一行粘贴行
      命令行：粘贴
        :1,10 co 20 => 将1-10行插入到第20行之后
        :1,10d => 将1-10行剪切,利用p命令可将剪切后的内容进行粘贴
        :1, 10 m 20 => 将第1-10行移动到第20行之后
    8. 选择：
      v(lower) => 进入可视模式，移动光标选择文本块内容;
      V(upper) => 进入可视模式，移动光标选择多行;
    9. 撤销：
      u(lower) => 撤销（Undo）
      U(upper) => 撤销对整行的操作p
